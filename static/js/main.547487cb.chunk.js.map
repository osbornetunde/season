{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","summer","text","iconName","winter","SeasonDisplay","props","lat","month","season","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","Spinner","class","message","defaultProps","App","state","errorMessage","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","src_SeasonDisplay_0","src_Spinner","renderContent","React","Component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"4LAGMA,SAAe,CACpBC,OAAQ,CACPC,KAAK,sBACLC,SAAU,OAEXC,OAAQ,CACPF,KAAM,qBACNC,SAAU,eAuBGE,EAVO,SAAAC,GACrB,IATkBC,EAAKC,EASjBC,GATYF,EASOD,EAAMC,KATRC,GASa,IAAIE,MAAOC,YARnC,GAAKH,EAAQ,EACjBD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAICK,EAEDZ,EAAaS,GAAhCP,EAFoBU,EAEpBV,KAAMC,EAFcS,EAEdT,SACf,OAAOU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBR,IACtCI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,kBAAAC,OAAoBd,EAApB,cACZU,EAAAC,EAAAC,cAAA,UAAKb,GACLW,EAAAC,EAAAC,cAAA,KAAGC,UAAS,mBAAAC,OAAqBd,EAArB,gBC3BXe,EAAU,SAAAZ,GACf,OACGO,EAAAC,EAAAC,cAAA,OAAKI,MAAM,oBACTN,EAAAC,EAAAC,cAAA,OAAKI,MAAM,sBACTb,EAAMc,WAMdF,EAAQG,aAAe,CACtBD,QAAS,aAGKF,QCXTI,6MACFC,MAAQ,CAAEhB,IAAK,KAAMiB,aAAc,uFAEhB,IAAAC,EAAAC,KAClBC,OAAOC,UAAUC,YAAYC,mBAC9B,SAAAC,GAAQ,OAAIN,EAAKO,SAAS,CAAEzB,IAAKwB,EAASE,OAAOC,YACjD,SAAAC,GAAG,OAAIV,EAAKO,SAAS,CAAER,aAAcW,EAAIf,oDAKzC,OAAIM,KAAKH,MAAMC,eAAiBE,KAAKH,MAAMhB,IAClCM,EAAAC,EAAAC,cAAA,qBAAcW,KAAKH,MAAMC,eAG7BE,KAAKH,MAAMC,cAAgBE,KAAKH,MAAMhB,IAClCM,EAAAC,EAAAC,cAACqB,EAAD,CAAe7B,IAAKmB,KAAKH,MAAMhB,MAGjCM,EAAAC,EAAAC,cAACsB,EAAD,CAASjB,QAAQ,oEAKxB,OAAOP,EAAAC,EAAAC,cAAA,WAAMW,KAAKY,wBAxBJC,IAAMC,WA2BlBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOhC,EAAAC,EAAAC,cAAC+B,EAAD,MAASL","file":"static/js/main.547487cb.chunk.js","sourcesContent":["import React from \"react\";\nimport './SeasonDisplay.css'\n\nconst seasonConfig = {\n\tsummer: {\n\t\ttext:'Let\\'s hit the beach',\n\t\ticonName: 'sun' \n\t},\n\twinter: {\n\t\ttext: 'Burr, it is chilly',\n\t\ticonName: 'snowflake'\n\t}\n}\n\n\nconst getSeason = (lat, month) => {\n\tif (month > 2 && month < 9) {\n\t\treturn lat > 0 ? 'summer' : 'winter';\n\t} else {\n\t\treturn lat < 0 ? 'winter' : 'summer';\n\t}\n}\n\nconst SeasonDisplay = props => {\n\tconst season = getSeason(props.lat, new Date().getMonth());\n  \tconst { text, iconName } = seasonConfig[season] \n  return <div className={`season-display ${season}`}>\n  \t\t\t<i className={`icon-left icon ${iconName} massive`} />\n  \t\t\t<h1>{text}</h1>\n  \t\t\t<i className={`icon-right icon ${iconName} massive`} />\n  \t\t</div>\n};\n\nexport default SeasonDisplay;\n","import React from 'react';\n\nconst Spinner = props => {\n\treturn(\t\n  \t\t<div class=\"ui active dimmer\">\n    \t\t<div class=\"ui big text loader\">\n    \t\t\t{props.message}\n    \t\t</div>\n \t\t</div>\n\t\t) \n}\n\nSpinner.defaultProps = {\n\tmessage: 'Loading..'\n}\n\nexport default Spinner;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Spinner from './Spinner';\n\nclass App extends React.Component {\n    state = { lat: null, errorMessage: '' }\n\n   componentDidMount() {\n     window.navigator.geolocation.getCurrentPosition(\n    position => this.setState({ lat: position.coords.latitude }),\n    err => this.setState({ errorMessage: err.message })\n  )\n  }\n\n  renderContent() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div>Error: { this.state.errorMessage }</div>\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return <SeasonDisplay lat={this.state.lat} />\n    }\n\n    return <Spinner message=\"Please accept location request\"/>\n  }\n \n\n  render() {\n    return <div>{this.renderContent()}</div>\n }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}